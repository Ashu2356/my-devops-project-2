pipeline {
    agent any

    environment {
        IMAGE_NAME = "ghcr.io/ashu2356/webapp:18"
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the whole repo at root workspace
                checkout([$class: 'GitSCM',
                    branches: [[name: 'main']],
                    userRemoteConfigs: [[url: 'https://github.com/Ashu2356/my-devops-project-2.git']]
                ])
            }
        }

        stage('Build WAR') {
            steps {
                dir('SprintBootService-1') {
                    sh 'mvn clean install'
                }
            }
        }

        stage('Build & Push Docker Image to GHCR') {
            environment {
                GITHUB_TOKEN = credentials('ghcr_token')  // Jenkins credential ID for GitHub token
            }
            steps {
                dir('SprintBootService-1') {
                    withCredentials([string(credentialsId: 'ghcr_token', variable: 'GITHUB_TOKEN')]) {
                        sh '''
                            echo $GITHUB_TOKEN | docker login ghcr.io -u Ashu2356 --password-stdin
                            docker build -t $IMAGE_NAME .
                            docker push $IMAGE_NAME
                        '''
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                // Assuming deploy.yaml and service.yaml are in SprintBootService-1 folder
                dir('SprintBootService-1') {
                    sh '''
                        kubectl apply -f deploy.yaml
                        kubectl apply -f service.yaml
                    '''
                }
            }
        }
    }

    post {
        failure {
            echo '❌ Build or deployment failed.'
        }
        success {
            echo '✅ Build and deployment completed successfully.'
        }
    }
}
